@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";
/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "~@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "~@ionic/angular/css/normalize.css";
@import "~@ionic/angular/css/structure.css";
@import "~@ionic/angular/css/typography.css";
@import "~@ionic/angular/css/display.css";

/* Optional CSS utils that can be commented out */
// @import "~@ionic/angular/css/padding.css";
// @import "~@ionic/angular/css/float-elements.css";
// @import "~@ionic/angular/css/text-alignment.css";
// @import "~@ionic/angular/css/text-transformation.css";
// @import "~@ionic/angular/css/flex-utils.css";

.btn-green {
    @apply text-white bg-green hover:bg-green-dark;
}

.btn-blue {
    @apply text-white bg-blue hover:bg-blue-dark;
}

.btn {
    @apply text-center p-3 duration-300 rounded-lg;
}

.btn-transparent {
    @apply text-center p-2 duration-300 rounded-lg
    text-blue hover:bg-blue hover:text-white
    dark:text-white font-bold;
}

.btn-rounded {
    @apply text-center p-1 duration-300 rounded-full;
}

.input {
    @apply p-2 rounded-md focus:outline-none focus:ring-2 focus:ring-green-light focus:border-transparent 
    border-light-dark dark:border-transparent dark:text-white
    dark:bg-dark-darkest bg-transparent;
}

.input-invalid {
    @apply outline-none ring-2 ring-red-500 border-transparent;
}

.card {
    @apply rounded-lg p-4 md:p-8 shadow-md bg-light-lightest dark:bg-dark-dark;
}

.card-modal {
    @apply rounded-lg p-4 shadow-lg bg-light-lightest dark:bg-dark;
}

.background {
    @apply w-screen h-screen bg-light dark:bg-dark-darkest;
}

.link {
    @apply font-medium cursor-pointer text-blue dark:text-blue-light hover:underline;
}

.text {
    @apply text-dark dark:text-white;
}

.label {
    @apply font-semibold text-dark-darkest dark:text-light-lightest;
}

.label-error {
    @apply font-semibold text-red-500;
}

.radioButton {
    @apply opacity-15
    bg-light-dark dark:bg-dark border-transparent checked:opacity-100 dark:opacity-100
    checked:bg-blue hover:checked:bg-blue-light text-blue dark:text-blue-dark 
    checked:border-transparent ring-0 focus:ring-0 focus:ring-offset-0;
}

.checkBox {
    @apply opacity-15 rounded-md
    bg-light-dark dark:bg-dark border-transparent checked:opacity-100 dark:opacity-100
    checked:bg-blue hover:checked:bg-blue-light text-blue dark:text-blue-dark 
    checked:border-transparent ring-0 focus:ring-0 focus:ring-offset-0;
}

.h-sec {
    @apply text-4xl text-black dark:text-white;
}

.h-pri {
    @apply text-6xl text-black dark:text-white;
}

.icon {
    @apply fill-current text-light-darkest hover:text-black
    dark:text-dark-lightest dark:hover:text-white;
}

.icon-active {
    @apply fill-current text-black
    dark:text-white;
}

.icon-white {
    @apply fill-current text-white;
}

.separator {
    @apply w-full h-px bg-light-darkest;
}

.separator-light {
    @apply w-full h-px my-3 bg-light-dark;
}

/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

/* Firefox */
input[type="number"] {
    -moz-appearance: textfield;
}

.label-top-input {
    top: 0%;
    transform: translateY(-50%);
    font-size: 14px;
}

.empty input:not(:focus) + label {
    top: 50%;
    transform: translateY(-50%);
    font-size: 18px;
    color: #919191;
}

/* Firefox */
* {
    scrollbar-width: thin;
}

ng-select .ng-select-container span.ng-arrow-wrapper span.ng-arrow {
    mask-image: url("assets/icon/expand_more_24dp.svg");
    mask-size: contain;

    -webkit-mask-image: url("assets/icon/expand_more_24dp.svg");
    -webkit-mask-size: contain;

    background-color: #0077b6;

    height: 30px;
    width: 30px;
}

ng-select .ng-select-container span.ng-arrow-wrapper {
    margin-top: auto;
    margin-bottom: auto;
    height: 30px;
}

/* Hide default cross */
.ng-select span.ng-clear-wrapper span.ng-clear {
    font-size: 0;
    background-color: #00000000;
}

.ng-select span.ng-clear-wrapper {
    width: 0px;
}

.ng-value {
    margin-top: auto;
    margin-bottom: auto;
}

ng-select .ng-dropdown-panel-items {
    @apply z-10 shadow rounded-md;
}

.ng-dropdown-panel {
    animation: growDown 300ms ease-in-out;
    transform-origin: top center;
    border: 0 !important;
}
@keyframes growDown {
    0% {
        transform: scaleY(0);
    }
    80% {
        transform: scaleY(1.1);
    }
    100% {
        transform: scaleY(1);
    }
}

.loader {
    display: inline-block;
    width: 30px;
    height: 30px;
    position: relative;
    border: 4px solid #40916c;
    top: 50%;
    animation: loader 2s infinite ease;
}

.loader-inner {
    vertical-align: top;
    display: inline-block;
    width: 100%;
    background-color: #40916c;
    animation: loader-inner 2s infinite ease-in;
}

@keyframes loader {
    0% {
        transform: rotate(0deg);
    }

    25% {
        transform: rotate(180deg);
    }

    50% {
        transform: rotate(180deg);
    }

    75% {
        transform: rotate(360deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

@keyframes loader-inner {
    0% {
        height: 0%;
    }

    25% {
        height: 0%;
    }

    50% {
        height: 100%;
    }

    75% {
        height: 100%;
    }

    100% {
        height: 0%;
    }
}

// Dragula css
/* in-flight clone */
.gu-mirror {
    position: fixed !important;
    margin: 0 !important;
    z-index: 9999 !important;
    opacity: 0.8;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";
    filter: alpha(opacity=80);
    pointer-events: none;
}
/* high-performance display:none; helper */
.gu-hide {
    left: -9999px !important;
}
/* added to mirrorContainer (default = body) while dragging */
.gu-unselectable {
    -webkit-user-select: none !important;
    -moz-user-select: none !important;
    -ms-user-select: none !important;
    user-select: none !important;
}
/* added to the source element while its mirror is dragged */
.gu-transit {
    opacity: 0.2;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=20)";
    filter: alpha(opacity=20);
}
